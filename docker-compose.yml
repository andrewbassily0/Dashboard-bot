services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: auto_parts_bot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  django_app:
    build: ./django_app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./django_app:/app
      - media_files:/app/media
      - static_files:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/auto_parts_bot
      - DJANGO_SECRET_KEY=your-secret-key-change-this-in-production
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - N8N_WEBHOOK_URL=http://n8n:5678
      - DEBUG=True
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  n8n:
    image: n8nio/n8n:latest
    ports:
      - "5678:5678"
    environment:
      # Authentication
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      
      # Webhook Configuration
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      
      # Database Configuration
      - DB_TYPE=sqlite
      - DB_SQLITE_DATABASE=/home/node/.n8n/database.sqlite
      - DB_SQLITE_POOL_SIZE=10
      
      # Performance & Security
      - GENERIC_TIMEZONE=Asia/Riyadh
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
      - N8N_EDITOR_BASE_URL=http://localhost:5678/
      
      # Custom Environment Variables
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - DJANGO_API_URL=http://django_app:8000
      - N8N_WEBHOOK_URL=http://localhost:5678
      
      # Production Webhook Settings
      - N8N_SKIP_WEBHOOK_DEREGISTRATION_SHUTDOWN=true
      - N8N_DISABLE_PRODUCTION_MAIN_PROCESS=false
      
      # Logging
      - N8N_LOG_LEVEL=info
      - N8N_LOG_OUTPUT=console
      
      # Security
      - N8N_SECURITY_OAUTH2_DISABLED=true
      - N8N_SECURITY_OAUTH2_GOOGLE_DISABLED=true
      - N8N_SECURITY_OAUTH2_GITHUB_DISABLED=true
      
      # Rate Limiting
      - N8N_RATE_LIMIT_WINDOW=60000
      - N8N_RATE_LIMIT_MAX=1000
      
      # Webhook Security
      - N8N_WEBHOOK_TEST_URL=http://localhost:5678/
      - N8N_WEBHOOK_VERIFY_SSL=false
      
      # Execution
      - N8N_EXECUTIONS_PROCESS=main
      - N8N_EXECUTIONS_MODE=regular
      - N8N_EXECUTIONS_TIMEOUT=3600
      - N8N_EXECUTIONS_TIMEOUT_MAX=7200
      
      # Disable Redis for simplicity (use memory instead)
      # - N8N_QUEUE_BULL_REDIS_HOST=redis
      # - N8N_QUEUE_BULL_REDIS_PORT=6379
      # - N8N_QUEUE_BULL_REDIS_DB=0
      
      # Cache - disabled for now
      # - N8N_CACHE_BACKEND=redis
      # - N8N_CACHE_REDIS_HOST=redis
      # - N8N_CACHE_REDIS_PORT=6379
      # - N8N_CACHE_REDIS_DB=1
      
      # Metrics
      - N8N_METRICS_ENABLED=true
      - N8N_METRICS_PREFIX=n8n
      
      # Health Check
      - N8N_HEALTH_CHECK_ENABLED=true
      - N8N_HEALTH_CHECK_PATH=/healthz
      
      # Development
      - NODE_ENV=production
      
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows:ro
      - ./n8n/custom:/home/node/.n8n/custom:ro
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    # depends_on:
      # - redis

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "8888:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - media_files:/var/www/media
      - static_files:/var/www/static
    depends_on:
      django_app:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  n8n_data:
    driver: local
  redis_data:
    driver: local
  media_files:
    driver: local
  static_files:
    driver: local

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

